#you can use the code after the DE analysis of raw count matrix
#please prepare the gene list first 
##
ap1 <- read_tsv("ap1.txt")
ap1 <- t(ap1$converted_alias) #converted_alias here is EntrezGeneIds
symbols <- as.character(c(ap1))
Nsig1 <- length(symbols)

plotDat <- vst(ddsObj)[symbols,] %>% assay()

#transfer EntrezGeneIds into Gene symbol 
ensembl=useMart("ENSEMBL_MART_ENSEMBL", host="useast.ensembl.org")
ensembl = useDataset("hsapiens_gene_ensembl", mart=ensembl)
attributeNames <- c('external_gene_name')
ourFilterType <- "ensembl_gene_id"
filterValues <- rownames(plotDat)
annot <- getBM(attributes=attributeNames, filters = ourFilterType, values = filterValues, mart = ensembl)
annot <- as.matrix(annot)
rownames(plotDat) <- c(annot)

z.mat <- t(scale(t(plotDat), center=TRUE, scale=TRUE))

myPalette <- c("blue", "white", "red")
myRamp = colorRamp2(c(-2, 0, 2), myPalette)

hcDat <- hclust(dist(z.mat))
cutGroups <- cutree(hcDat, h=4)
ha1 = ha_column = HeatmapAnnotation(df = data.frame(status = c(rep("responder", 6), rep("nonresponder", 10))),
                                    col = list(status = c("responder" =  "orange", "nonresponder" = "purple")))

GeneClusters <- as.data.frame(unlist(cutGroups))
GeneClusters$GeneID <- names(cutGroups)
write.table(GeneClusters, file="GeneClusters.txt", sep="\t", quote=FALSE, row.names=FALSE, col.names=TRUE)

png(file="Heatmap_ap1.png", width=1600, height=400+Nsig1*6)
print(Heatmap(z.mat, name = "z-score",
              col = myRamp,   
              show_row_name = TRUE,
              cluster_columns = TRUE,
              rect_gp = gpar(col = "darkgrey", lwd=0.5),
              top_annotation = ha1))
dev.off()
